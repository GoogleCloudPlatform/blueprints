apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: gcpenforcenamingv2
spec:
  crd:
    spec:
      names:
        kind: GCPEnforceNamingV2
      validation:
        openAPIV3Schema:
          properties:
            naming_rules:
              items:
                properties:
                  patterns:
                    items:
                      type: string
                    type: array
                  resource:
                    type: string
                type: object
              type: array
  targets:
  - rego: |
      package templates.gcp.GCPEnforceNamingConstraintV1

      violation[{"msg": msg}] {
        rule := input.parameters.naming_rules[_]
        kind := input.review.object.kind
        kind == rule.kind
        pattern := rule.patterns[_]
        name := input.review.object.metadata.name
        not re_match(pattern, name)
        msg := sprintf("The resource '%s' of type '%s' didn't follow the regex naming convention %s", [name, kind, pattern])
      }

      # This is to catch failures in FutureObjects generated by the folder-ref kpt fn.
      violation[{"msg": msg}] {
        rule := input.parameters.naming_rules[_]
        kind := input.review.object.kind
        kind == "FutureObject"
        input.review.object.spec.object.kind == rule.kind
        pattern := rule.patterns[_]
        name := input.review.object.spec.object.metadata.name
        not re_match(pattern, name)
        msg := sprintf("The resource '%s' of type '%s' didn't follow the regex naming convention %s", [name, rule.kind, pattern])
      }
    target: admission.k8s.gatekeeper.sh
status: {}
