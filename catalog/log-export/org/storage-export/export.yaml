# API Activation
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata:
  name: my-project-id-storage # kpt-set: ${project-id}-storage
  namespace: projects
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:log-export/v0.2.0
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    cnrm.cloud.google.com/project-id: my-project-id # kpt-set: ${project-id}
spec:
  resourceID: storage-component.googleapis.com
---
# Organization Sink to Storage
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogSink
metadata:
  name: 123456789012-storagesink # kpt-set: ${org-id}-storagesink
  namespace: my-namespace # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:log-export/v0.2.0
spec:
  destination:
    storageBucketRef:
      name: my-storage-bucket # kpt-set: ${storage-bucket-name}
  filter: "" # kpt-set: ${filter}
  includeChildren: true
  organizationRef:
    external: "123456789012" # kpt-set: ${org-id}
---
# Storage Dataset
apiVersion: storage.cnrm.cloud.google.com/v1beta1
kind: StorageBucket
metadata:
  name: my-storage-bucket # kpt-set: ${storage-bucket-name}
  namespace: my-namespace # kpt-set: ${namespace}
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:log-export/v0.2.0
    cnrm.cloud.google.com/force-destroy: "true"
spec:
  bucketPolicyOnly: false # kpt-set: ${bucket-policy-only}
  location: US # kpt-set: ${location}
  storageClass: MULTI_REGIONAL # kpt-set: ${storage-class}
