# Trigger for staging. Pushes to this branch will result in validation
# and hydration happening, but will not trigger the rest of Yakima.
apiVersion: cloudbuild.cnrm.cloud.google.com/v1beta1
kind: CloudBuildTrigger
metadata:
  name: source-repo-cicd-staging-trigger # {"$kpt-set":"staging-trigger-name"}
  namespace: yakima-system # {"$kpt-set":"namespace"}
spec:
  description: Cloud Build Trigger for building the staging branch of the source (DRY)
    repository. This runs all user defined kpt fns and pushes to the deployment (WET)
    repository.
  disabled: false
  triggerTemplate:
    repoRef:
      name: source-repo # {"$kpt-set":"source-repo"}
    branchName: "[^master]"
  substitutions:
    "_SOURCE_REPO": "source-repo" # {"$kpt-set":"source-repo"}
    "_DEPLOYMENT_REPO": "deployment-repo" # {"$kpt-set":"deployment-repo"}
  build:
    timeout: 600s
    step:
    - id: "Clone Deployment Repo"
      name: gcr.io/google.com/cloudsdktool/cloud-sdk
      dir: /deployment-workspace
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        gcloud source repos clone $_DEPLOYMENT_REPO .
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
        mkdir -p /deployment-workspace/config
      timeout: 300s
      volumes:
      - name: deployment-workspace
        path: /deployment-workspace
    - id: "Apply Hydration and Validation"
      name: gcr.io/kpt-dev/kpt:latest
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        set -o pipefail
        mkdir -p /hydrated-workspace/config
        # TODO(jcwc): Remove "kpt cfg grep" line once Config Sync supports omitting local-configs
        #   otherwise, temporarily force omit local-configs using kpt cfg grep.
        kpt fn source . \
        | kpt fn run \
        | kpt cfg grep "metadata.annotations.config\.kubernetes\.io/local-config=true" --invert-match \
        | kpt fn sink /hydrated-workspace/config
      volumes:
      - name: hydrated-workspace
        path: /hydrated-workspace
    - id: "Evaluate hydrated changes"
      waitFor:
      - "Apply Hydration and Validation"
      - "Clone Deployment Repo"
      name: gcr.io/yakima-eap/evaluate:latest
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        printf "\n\nDiffing against deployment repo master branch:\n"
        evaluate --before="/deployment-workspace/config" --after="/hydrated-workspace/config"
      volumes:
      - name: hydrated-workspace
        path: /hydrated-workspace
      - name: deployment-workspace
        path: /deployment-workspace
    - id: "Push Changes To Deployment Repo"
      waitFor:
      - "Evaluate hydrated changes"
      name: gcr.io/google.com/cloudsdktool/cloud-sdk
      dir: /deployment-workspace
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        (git show-branch $BRANCH_NAME &>/dev/null) && (git checkout $BRANCH_NAME) || (git checkout -b $BRANCH_NAME)
        rm -r /deployment-workspace/config/*
        cp -r /hydrated-workspace/config /deployment-workspace/
        touch /deployment-workspace/config/.gitkeep

        # Configure Git to create commits with Cloud Build's service account
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
        git add -A
        git status
        if git diff --cached --exit-code; then echo "No changes"; true;
        else git commit -m "Resources from ${COMMIT_SHA}" && git push origin $BRANCH_NAME; fi

        printf "\n\nLatest deployment repo commit SHA: $(git rev-parse HEAD)\n"
      volumes:
      - name: hydrated-workspace
        path: /hydrated-workspace
      - name: deployment-workspace
        path: /deployment-workspace
